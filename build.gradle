apply plugin: 'com.github.ben-manes.versions'
/**
 * Major version component, incremented when the VERSION_FEATURE reaches to 10.
 */
final String VERSION_MAJOR = "1"
/**
 * Feature version component YY, incremented when a feature is added. If it reaches 99 then it is set back to 00 and the VERSION_MAJOR is incremented by one.
 */
final String VERSION_FEATURE = "8"
buildscript {
    ext.gradlePluginVersion = '7.3.1'
    ext.gradleVersionsVersion = '0.43.0' // 07.01.2023
    ext.kotlin_version = '1.7.20'
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradlePluginVersion"
        classpath "com.github.ben-manes:gradle-versions-plugin:$gradleVersionsVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

ext {
    versionName = "0.0.1"
    versionCode = 1
    isRelease = false
}

allprojects {
    ext {
        // Tool versions
        versionCompileSdk = 33 // 07.01.2023
        versionTargetSdk = 33 // 07.01.2023
        versionMinSdkVersion = 14 // 07.01.2023

        // Libraries
        versionAppCompat = '1.5.1' // 07.01.2023
        versionRecyclerView = '1.2.1' // 07.01.2023
        versionLeanback = '1.0.0' // 27.10.2019
        versionStickyHeadersRecyclerView = '0.4.3@aar' // 27.10.2019
        versionTimber = '5.0.1' // 07.01.2023
        versionCoreKtx = '1.9.0' // 07.01.2023
        versionMultidex = '2.0.1' // 07.01.2023
        versionCoreDesugar = '1.2.2' // 07.01.2023
    }
    buildscript {
        project.group = "harrikirik"
        // Yes yes, I am cheating here.
        project.ext.isRelease = project.gradle.startParameter.taskNames.contains("buildAllRelease")

        String suppliedBuildNumber = "$System.env.BUILD_NUMBER"
        // VersionCode
        if (suppliedBuildNumber == null || suppliedBuildNumber.equals("") || suppliedBuildNumber.equals("null")) {
            project.ext.versionCode = 140
        } else {
            project.ext.versionCode = Integer.valueOf(suppliedBuildNumber) + 140
        }

        // VersionName
        String baseVersionName = VERSION_MAJOR + "." + VERSION_FEATURE
        project.ext.versionName = baseVersionName + (isRelease ? ".storebuild" : ".developmentbuild") + project.ext.versionCode

        // This is the synonym
        project.version = project.ext.versionName
    }
    repositories {
        google()
        mavenCentral()
    }

    // See: https://github.com/ben-manes/gradle-versions-plugin
    dependencyUpdates.resolutionStrategy = {
        componentSelection { rules ->
            rules.all { selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject('Release candidate')
                }
            }
        }
    }
}
